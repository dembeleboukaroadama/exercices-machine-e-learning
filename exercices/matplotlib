# -*- coding: utf-8 -*-
"""
Created on Mon Jan 20 15:01:24 2020

@author: Boukaro Adama
"""

""""on cree un graphique pour voir les choses sur lesquels on travaille"""

import numpy as np 
from matplotlib import pyplot as plt
import pandas as pd

population = {'California': 38332521,
                   'Texas': 26448193,
                   'New York': 19651127,
                   'Florida': 19552860,
                   'Illinois': 12882135,
                   "Abidjan":8566485,
                   "Bouake": 5000252}



quartier = {'California': 35,
                   'Texas': 35,
                   'New York': 45,
                   'Florida': 48,
                   'Illinois': 52,
                   "Abidjan":20,
                   "Bouake": 15}

df1=pd.DataFrame({"Quartier": quartier})
df1.index.name="departements"
df1

df2 = pd.DataFrame({'population': population})
#utiliser une colonne comme index
df2.index.name="departements"
df1

df=pd.merge(df1, df2, on="departements")

import numpy as np
import matplotlib.pyplot as plt
#pour creer une nouvelle figure
fig=plt.figure()
fig.suptitle("la figure demo")
fig, ax_lt=plt.subplots(2,2) "nous venons de creer une figure avec une grille 2x2"

"axes: C’est ce que vous voyez comme «un tracé», c’est la région de l’image avec l’espace de données"
"axis: Ce sont les objets de type ligne numérique. Ils se chargent de fixer les limites du graphe et de générer les ticks"

x=np.linspace(0,2,100) #reer un domaine
plt.plot(x, x, label="lineaire") "le premier appel à plt.plot fait appels aux axes
plt.plot(x, x**2, label="quadratic")
"puis les appels suivants à plt.plot ajoutent des lignes supplémentaires sur le même axes"
plt.plot(x, x**3, label="cubic")
plt.xlabel("l'axe des absices")
plt.ylabel("l'axe des ordonnees")
plt.title('la courbe des x')
plt.legend()
plt.show()

x = np.arange(0, 10, 0.2)
y = np.sin(x)
plt.plot(x, y)

"matplotlib.pyplot est une collection de fonctions de style de commande qui font fonctionner matplotlib comme MATLAB"

plt.plot([1, 2, 3, 4])
plt.ylabel('some number')
"""
liste unique ou tableau à la commande plot (), matplotlib suppose qu'il s'agit d'une séquence de valeurs y, et
génère automatiquement les valeurs x pour vous. Puisque les plages de python commencent par 0, le x par défaut
le vecteur a la même longueur que y mais commence par 0. Les données x sont donc [0,1,2,3]"""


"""Pour chaque paire d'arguments x, y,
il y a un troisième argument optionnel qui est la chaîne de format
qui indique la couleur et le type de ligne du tracé"""

plt.plot([1,2,3,4],[1,4,9,16], 'ro')
plt.plot([1,2,3,4],[1,4,9,16], 'g^')
plt.plot([1,2,3,4],[1,4,9,16], 'red')
t = np.arange(0., 5., 0.2)
# red dashes, blue squares and green triangles
plt.plot(t, t, 'r--', t, t**2, 'bs', t, t**3, 'g^')
plt.show()

data={"a":np.arange(50),
      "c":np.random.randn(0,50,50),
      "d":np.random.randint(50)}

data = {'a': np.arange(50),
'c': np.random.randint(0, 50, 50),
'd': np.random.randn(50)}
data['b'] = data['a'] + 10 * np.random.randn(50)
data['d'] = np.abs(data['d']) * 100
plt.scatter('a', 'b', c='c', s='d', data=data)
plt.legend()
plt.xlabel('entry a')
plt.ylabel('entry b')
plt.show()

#afficher par des points

"""It is also possible to create a plot using categorical variables. Matplotlib allows you to pass
categorical variables directly to many plotting functions. For example"""

names=["groupeA","groupeB","groupeC"]
values=[0,10,100]

plt.bar(names, values) #•diagramme en bande
plt.scatter(names, values) #•diagramme en point
plt.plot(names, values, linewidth=3.0) #•courbe


def f(t):
    return np.exp(-t) * np.cos(2*np.pi*t)
t1 = np.arange(0.0, 5.0, 0.1)
t2 = np.arange(0.0, 5.0, 0.02)

plt.plot(t1, f(t1),'ro', t2, f(t2), 'k') 
plt.plot(t1, f(t1),'bo', t2, f(t2), 'k')
plt.plot(t1, f(t1),'go', t2, f(t2), 'k')

plt.plot(t2, np.cos(2*np.pi*t2), 'r--')
plt.xlabel("x")
plt.xlabel("cos x")


mu, sigma = 100, 15
x = mu + sigma * np.random.randn(10000)

n, bins, patches=plt.hist(x, 50 ,density=1, facecolor="g", alpha=0.75)
 
plt.xlabel('Smarts')
plt.ylabel('Probability')
plt.title('Histogram of IQ')
plt.text(60, .025, r'$\mu=100,\ \sigma=15$')


"""matplotlib.pyplot prend en charge non seulement
échelles à axe linéaire, mais aussi échelles logarithmiques et logit.
Ceci est couramment utilisé si les données couvrent plusieurs ordres de grandeur. Modification de l'échelle d'un axe
est facile:
plt.xscale (’log’)"""

from matplotlib.ticker import NullFormatter
y = np.random.normal(loc=0.5, scale=0.4, size=1000)

y=y[(y>0) & (y<1)]
y.sort()
x = np.arange(len(y))
"""plot with various axes scales"""
plt.figure()

#lineaire
plt.subplot(222)
plt.plot(x,y)
plt.yscale('linear')
plt.title('linear')
plt.grid(True)
#log
plt.subplot(222)
plt.plot(x,y)
plt.yscale('log')
plt.title('log')
plt.grid(True)
#log symetrique
plt.subplot(222)
plt.plot(x,y-y.mean())
plt.yscale('symlog', linthreshy=0.01)
plt.title('sym log')
plt.grid(True)
#logit
plt.subplot(2,2) """la fonction subplot affiche plusieurs grphique sur une meme figure"""

plt.plot(x,y)
plt.yscale('logit')
plt.title('logit')
plt.grid(True)
 

u=np.array([[1,4,9,16],[1,2,3,4]])
v=np.array([[1,4,9,16],[1,2,3,4]])
x=df['Quartier']
x
y=df['population']
y

n, bins, patches=plt.hist(x, 50 ,density=1, facecolor="g", alpha=0.75)
plt.hist(x, 50, density=2,alpha=0.99, label='' )
plt.legend()
plt.show()

plt.bar(x,y)
plt.polar(x,y, lw=5, c='red', ls='--')
  
plt.fill(y)

plt.scatter(x, y)
plt.pie(y)

plt.specgram(x,y)

plt.pcolormesh(df)

plt.savefig() #pour enregistrer la figgure

"""créer un tracé de ligne avec des étiquettes de texte à l'aide de plot ()

   Plusieurs axes (c'est-à-dire des sous-tracés) sont créés avec la fonction subplot ()
   
   Matplotlib peut afficher des images (en supposant des dimensions horizontales également espacées) en utilisant
   fonction imshow ().
   
   La fonction pcolormesh () peut faire une représentation colorée d'un tableau à deux dimensions, même
   si les dimensions horizontales sont espacées de manière inégale. La fonction contour () est un autre moyen de
   représentent les mêmes données 
   
   La fonction hist () génère automatiquement des histogrammes et retourne le nombre de bin ou les probabilités
   
   Le streamplot ()
   La fonction trace les lignes de courant d'un champ vectoriel. En plus de simplement tracer
   les lignes de courant, il vous permet de mapper les couleurs et / ou les largeurs de ligne des lignes de courant à un autre
   paramètre, comme la vitesse ou l'intensité locale du champ vectoriel
   
   Utilisez la fonction bar () pour créer des graphiques à barres, qui incluent des personnalisations telles
   que des barres d'erreur
   
   La fonction polar () génère des tracés polaires
   
   La fonction fill () vous permet de tracer des courbes et des polygones remplis
   
   La fonction scatter () crée un nuage de points avec des arguments de taille et de couleur (facultatifs)
   
   La fonction pie () vous permet de créer des diagrammes circulaires
   
   les attributs qu'on peut ajouter a plot
   c; coleur
   lw: linewidht
   ls; linestyle
   
   """
   
   
   











